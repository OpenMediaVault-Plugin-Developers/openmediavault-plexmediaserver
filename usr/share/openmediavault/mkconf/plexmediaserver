#!/bin/sh
#
# Copyright (C) 2013-2017 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

# Enable/disable Plexpy
if [ "$(omv_config_get "//services/plexmediaserver/pyenable")" = "1" ]; then
    if [ ! -d /opt/plexpy ]; then
        git clone https://github.com/JonnyWong16/plexpy.git /opt/plexpy
        adduser --system --no-create-home plexpy
        chown -R plexpy:nogroup /opt/plexpy
        cp -f /opt/plexpy/init-scripts/init.systemd /lib/systemd/system/plexpy.service
        systemctl daemon-reload
    else
        # Migration
        if [ $(stat -c "%U" /opt/plexpy/) != "plexpy" ]; then
            adduser --system --no-create-home plexpy
            chown -R plexpy:nogroup /opt/plexpy
        fi
    fi

    # Configure
    if [ "$(omv_config_get "//services/plexmediaserver/pyrun")" = "1" ]; then
        systemctl enable plexpy.service || true
        systemctl restart plexpy.service || true
    else
        systemctl disable plexpy.service || true
        systemctl stop plexpy.service || true
    fi
else
    if [ -d /opt/plexpy ]; then
        systemctl disable plexpy.service || true
        systemctl stop plexpy.service || true
        rm -f /lib/systemd/system/plexpy.service
        systemctl daemon-reload
        rm -rf /opt/plexpy
        deluser --system plexpy
    fi
fi

# Enable/disable service
if [ "$(omv_config_get "//services/plexmediaserver/enable")" != "1" ]; then
    exit 0
fi

SERVICE="plexmediaserver"
PLEX_HOME="$(getent passwd plex | cut -d: -f6)"
DB_FOLDER="$(omv_config_get "//services/plexmediaserver/db-folder")"
DB_MNTENTREF="$(omv_config_get "//services/plexmediaserver/mntentref")"
DB_MNTENTDIR=$(xmlstarlet sel -t -m "//system/fstab/mntent[uuid='${DB_MNTENTREF}']" -v dir -b ${OMV_CONFIG_FILE} | xmlstarlet unesc)
UNIT_OVERRIDE_DIR="/etc/systemd/system/plexmediaserver.service.d"
PLEX_CODECS="/opt/plexcodecs"
CODECS="${PLEX_HOME}/Library/Application Support/Plex Media Server/Codecs"

if [ -f /etc/default/plexmediaserver.prev ]; then
    mv /etc/default/plexmediaserver.prev /etc/default/plexmediaserver
fi

createoverride()
{
    # create override directory if needed and create/update override file
    if [ ! -d ${UNIT_OVERRIDE_DIR} ]; then
        mkdir -p ${UNIT_OVERRIDE_DIR}
    fi

    cat <<EOF > ${UNIT_OVERRIDE_DIR}/db_folder.conf
[Service]
EnvironmentFile=/etc/default/plexmediaserver
Environment="PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=${DB_FOLDER}/Library/Application Support"
EOF
    chmod 664 ${UNIT_OVERRIDE_DIR}/db_folder.conf
    systemctl daemon-reload
}

chown -R plex:nogroup "${PLEX_HOME}"

if [ ! -d "${PLEX_CODECS}" ]; then
    killall -u plex || :
    mkdir -p "${PLEX_CODECS}"
    chown -R plex:nogroup "${PLEX_CODECS}"
    chmod 755 "${PLEX_CODECS}"
    cp -rfp "${CODECS}" "${PLEX_CODECS}"
    rm -rf "${CODECS}"
    ln -s "${PLEX_CODECS}/Codecs" "${PLEX_HOME}/Library/Application Support/Plex Media Server/Codecs"
    systemctl start ${SERVICE}.service >/dev/null || true
fi

if [ "${PLEX_HOME}" != "${DB_FOLDER}" ]; then
    if ! omv_is_mounted "${DB_MNTENTDIR}" ; then
        exit 1
    fi

    systemctl stop ${SERVICE}.service >/dev/null || true
    killall -u plex || :

    if [ ! -d "${DB_FOLDER}/Library" ]; then
        cp -rfp "${PLEX_HOME}" "${DB_FOLDER}"
        rm -rf "${PLEX_HOME}"
        createoverride
        usermod -d "${DB_FOLDER}" plex
    fi

    # Check current database uid.  If different, chown
    dbid="$(stat -c "%u" "${DB_FOLDER}/Library")"
    userid="$(getent passwd plex | cut -d: -f3)"
    if [ "${dbid}" != "${userid}" ]; then
        echo "Changing to proper owner.  This could take a few minutes."
        chown -R plex:nogroup "${DB_FOLDER}"
    fi

    systemctl start ${SERVICE}.service >/dev/null || true
else
    createoverride
fi

# created for plex uninstall because it fails if it can't remove this directory.
if [ ! -d "/var/lib/plexmediaserver" ]; then
    mkdir -p /var/lib/plexmediaserver
    chmod 755 /var/lib/plexmediaserver
fi
