#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2016 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

case "$1" in
    configure)

        SERVICE_XPATH_NAME="plexmediaserver"
        SERVICE_XPATH="/config/services/${SERVICE_XPATH_NAME}"

        PLEX_HOME="$(getent passwd plex | cut -d: -f6)"
        USER_ID="$(getent passwd plex | cut -d: -f3)"

        # Check current database uid.  If different, chown
        DB_ID="$(stat -c "%u" "${PLEX_HOME}/Library")"
        if [ "${DB_ID}" != "${USER_ID}" ]; then
            echo "Changing to proper owner.  This could take a few minutes."
            chown -R plex:nogroup "${PLEX_HOME}"
        fi

        if omv_config_exists "${SERVICE_XPATH}"; then
            ENABLE="$(omv_config_get "${SERVICE_XPATH}/enable")"
            MNTENTREF="$(omv_config_get "${SERVICE_XPATH}/mntentref")"
            SHOWTAB="$(omv_config_get "${SERVICE_XPATH}/showtab")"
        else
            ENABLE="0"
            MNTENTREF=""
            SHOWTAB="0"
        fi

        if omv_config_exists "${SERVICE_XPATH}/pyenable"; then
            PYENABLE="$(omv_config_get "${SERVICE_XPATH}/pyenable")"
            PYRUN="$(omv_config_get "${SERVICE_XPATH}/pyrun")"
        else
            PYENABLE="0"
            PYRUN="0"
        fi

        omv_config_delete "${SERVICE_XPATH}"

        echo "Initialize configuration"
        omv_config_add_node "/config/services" "${SERVICE_XPATH_NAME}"
        omv_config_add_key "${SERVICE_XPATH}" "enable" "${ENABLE}"
        omv_config_add_key "${SERVICE_XPATH}" "db-folder" "${PLEX_HOME}"
        omv_config_add_key "${SERVICE_XPATH}" "mntentref" "${MNTENTREF}"
        omv_config_add_key "${SERVICE_XPATH}" "showtab" "${SHOWTAB}"
        omv_config_add_key "${SERVICE_XPATH}" "pyenable" "${PYENABLE}"
        omv_config_add_key "${SERVICE_XPATH}" "pyrun" "${PYRUN}"

        dpkg-trigger update-fixperms
        dpkg-trigger update-locale
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument '$1'" >&2
        exit 1
    ;;
esac

exit 0
